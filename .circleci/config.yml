version: 2
jobs:
  checkout_and_install:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - checkout
      - restore_cache:
          keys:
            - v11-dependency-cache-{{ checksum "yarn.lock" }}
            - v11-dependency-cache-
      - run:
          name: Install Prereqs
          command: sudo apt-get update && sudo apt-get install -y libudev-dev libusb-1.0-0-dev yarn
      - run:
          name: Install Dependencies
          command: npx lerna bootstrap -- --frozen-lockfile
      - save_cache:
          key: v11-dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - save_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/protocol
            - ~/.ssh
  build:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run build
          command: yarn qbuild
      - save_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/protocol
            - ~/.ssh
  lint:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: ./ci/lint.sh
  docs:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install Pandoc
          command: wget https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-linux.tar.gz
      - run:
          name: Untar Pandoc
          command: sudo tar xvzf pandoc-2.7.3-linux.tar.gz --strip-components 1 -C /usr/local
      - run:
          name: Generate Docs
          command: ./scripts/build_docs_site.sh
      - store_artifacts:
          path: build/site
  slither:
    docker:
      - image: trailofbits/eth-security-toolbox
    working_directory: ~/protocol
    steps:
      - checkout
      - restore_cache:
          keys:
            - v7-sec-toolbox-deps-{{ checksum "yarn.lock" }}
            - v7-sec-toolbox-deps-
      - run:
          name: Install node and NPM
          command: ./ci/install_node_npm.sh
      - run:
          name: Change user
          command: sudo su ethsec
      - run:
          name: Reclaim ownership
          command: sudo chown -R $(whoami) ~/.npm ~/.config
      - run:
          name: Install Prereqs
          command: sudo apt-get update && sudo apt-get install -y libudev-dev libusb-1.0-0-dev python-dev
      - run:
          name: Install Dependencies
          command: sudo npm install -g yarn && npx lerna bootstrap -- --frozen-lockfile
      - save_cache:
          key: v7-sec-toolbox-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Slither
          command: ./ci/run_slither.sh
  test:
    docker:
      - image: circleci/node:lts
      - image: trufflesuite/ganache-cli
        command: ganache-cli -i 1234 -l 9000000 -p 9545
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run tests
          command: yarn run test
  test_fork:
    docker:
      - image: circleci/node:lts
      - image: trufflesuite/ganache-cli
        command: NODE_OPTIONS="--max-old-space-size=4096" ganache-cli -l 9000000 -f https://mainnet.infura.io/v3/5f56f0a4c8844c96a430fbd3d7993e39 -p 9545
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run tests
          command: yarn run test-fork
  coverage:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - checkout
      - restore_cache:
          key: protocol-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run coverage
          command: ./ci/coverage.sh ~/protocol/packages/core
      - store_artifacts:
          path: packages/core/coverage
  dapp_build:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Apply Deployment Registry
          command: yarn run load-addresses
      - run:
          name: Build Voter dApp
          working_directory: ~/protocol/packages/voter-dapp
          command: CI=false yarn run build
      - store_artifacts:
          path: ~/protocol/packages/voter-dapp/build
          destination: voter-dapp-build
  deploy_to_staging:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - restore_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install Prereqs
          command: sudo apt-get update && sudo apt-get install -y libudev-dev libusb-1.0-0-dev yarn
      - run:
          name: Install Pandoc
          command: wget https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-linux.tar.gz
      - run:
          name: Untar Pandoc
          command: sudo tar xvzf pandoc-2.7.3-linux.tar.gz --strip-components 1 -C /usr/local
      - run:
          name: Deploy Dapp
          command: ./ci/deploy_to_staging.sh
  publish:
    docker:
      - image: circleci/node:lts
    working_directory: ~/protocol
    steps:
      - add_ssh_keys:
          fingerprints:
            - "e5:da:db:1a:1d:66:5b:e7:f5:43:f2:24:1c:56:6a:97"
      - restore_cache:
          key: protocol-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install Prereqs
          command: sudo apt-get update && sudo apt-get install -y libudev-dev libusb-1.0-0-dev yarn
      - run:
          name: Publish
          command: yarn run publish-release

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_and_install
      - coverage:
          context: api_keys
          requires:
            - checkout_and_install
      - slither
      - build:
          requires:
            - checkout_and_install
      - lint:
          requires:
            - checkout_and_install
      - test:
          context: api_keys
          requires:
            - build
      - test_fork:
          context: api_keys
          requires:
            - build
      - docs:
          requires:
            - checkout_and_install
      - dapp_build:
          requires:
            - build
      - deploy_to_staging:
          context: gcloud
          requires:
            - dapp_build
            - test
          filters:
            branches:
              only: master
      - publish:
          context: api_keys
          requires:
            - build
            - test
          filters:
            branches:
              only: master
